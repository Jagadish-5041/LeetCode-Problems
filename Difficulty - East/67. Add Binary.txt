Problem Link : https://leetcode.com/problems/add-binary/description/

Solution in C :

#include<string.h>

int max(int first_value , int second_value){
    return ((first_value >= second_value) ? (first_value) : (second_value));
}

char* addBinary(char *binary_string_1 , char *binary_string_2){

    int binary_string_1_length = strlen(binary_string_1);
    
    int binary_string_2_length = strlen(binary_string_2);

    int result_binary_string_length = max(binary_string_1_length , binary_string_2_length);

    char *result_binary_string = (char*) malloc((result_binary_string_length + 1) * sizeof(char));
    
    result_binary_string[result_binary_string_length] = '\0';

    int carry_bit = 0;

    int binary_string_1_index = (binary_string_1_length - 1);

    int binary_string_2_index = (binary_string_2_length - 1);

    int result_binary_string_index = (result_binary_string_length - 1);

    while((binary_string_1_index >= 0) || (binary_string_2_index >= 0)){

        int bit_1 = (binary_string_1_index >= 0) ? (binary_string_1[(binary_string_1_index--)] - '0') : (0);
        
        int bit_2 = (binary_string_2_index >= 0) ? (binary_string_2[(binary_string_2_index--)] - '0') : (0);

        int sum_of_bits = (bit_1 + bit_2 + carry_bit);

        carry_bit = (sum_of_bits / 2);
        
        result_binary_string[(result_binary_string_index--)] = ((sum_of_bits % 2) + '0');
    }

    if(carry_bit){

        char *new_result_binary_string = (char *) malloc((result_binary_string_length + 2) * sizeof(char));

        new_result_binary_string[0] = (carry_bit + '0');

        strcpy((&new_result_binary_string[1]) , result_binary_string);

        free(result_binary_string);

        return new_result_binary_string;
    }

    return result_binary_string;
}