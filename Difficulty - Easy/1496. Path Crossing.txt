Problem Link : https://leetcode.com/problems/path-crossing/description/

Solution in Python :

class Solution:

    def isPathCrossing(self , path_string : str) -> bool:

        directions_dictionary = {'N' : [-1 , 0] , 'S' : [1 , 0] , 'E' : [0 , 1] , 'W' : [0 , -1]}

        current_x = 0

        current_y = 0

        paths_set = set()
        
        paths_set.add((current_x , current_y))

        for direction in path_string:

            next_x , next_y = directions_dictionary[direction]

            new_x = (current_x + next_x)

            new_y = (current_y + next_y)

            current_position = (new_x , new_y)

            if(current_position in paths_set):
                return True
            
            current_x = new_x

            current_y = new_y
            
            paths_set.add(current_position)
        
        return False